import fs from "node:fs/promises";
import path from "node:path";
import { buildCommand } from "@stricli/core";
import type { CSpellSettings, Issue } from "cspell";
import { getDefaultReporter, lint } from "cspell";
import { $ } from "execa";
import YAML from "yaml";
import { description } from "../../package.json";
import type { Context } from "./context";

const CONFIG_HEADER = `\
# yaml-language-server: $schema=https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json
# This file is @generated by <https://github.com/liblaf/cspell-init>.
# DO NOT EDIT!
`;

const DEFAULT_IGNORE: string[] = [
  ".cspell.*",
  ".git/",
  "*-lock.*",
  "*.lock",
  "cspell.*",
  "go.sum",
];

// ? I don't know why but ignoring these paths significantly improves performance.
const DEFAULT_IGNORE_EXTEND: string[] = DEFAULT_IGNORE.concat([
  ".*cache/",
  ".venv/",
  "dist/",
  "node_modules/",
  "site/",
  "target/",
]);

export const DEFAULT_SETTINGS: CSpellSettings = {
  allowCompoundWords: true,
  caseSensitive: false,
  enableGlobDot: true,
  ignorePaths: DEFAULT_IGNORE,
  ignoreRandomStrings: true,
  useGitignore: true,
};

async function saveConfig(
  file: string,
  params: { [key: string]: any },
): Promise<void> {
  const data = CONFIG_HEADER + YAML.stringify(params);
  await fs.mkdir(path.dirname(file), { recursive: true });
  await fs.writeFile(file, data);
}

async function gitRoot(): Promise<string> {
  const { stdout } = await $({
    stderr: "inherit",
  })`git rev-parse --show-toplevel`;
  return stdout.trim();
}

type Flags = {
  readonly "save-config"?: string;
};

export const main = buildCommand({
  docs: { brief: description },
  async func(this: Context, flags: Flags): Promise<void> {
    const root = await gitRoot();
    const reporter = getDefaultReporter({
      fileGlobs: ["."],
      issues: true,
      issuesSummaryReport: true,
      progress: true,
      relative: true,
      root,
      summary: true,
    });
    const words = new Set();

    await lint(
      ["."],
      {
        configSearch: false,
        dot: true,
        exclude: DEFAULT_IGNORE_EXTEND,
        gitignore: true,
        ignoreRandomStrings: true,
        root,
        config: {
          url: new URL("https://github.com/liblaf/cspell-init"),
          settings: DEFAULT_SETTINGS,
        },
      },
      {
        ...reporter,
        issue(issue: Issue): void {
          reporter.issue(issue);
          words.add(issue.text.toLowerCase());
        },
      },
    );

    const file =
      flags["save-config"] ?? path.join(root, ".config", "cspell.config.yaml");
    await saveConfig(file, {
      ...DEFAULT_SETTINGS,
      words: Array.from(words).sort(),
    });
  },
  parameters: {
    flags: {
      "save-config": {
        kind: "parsed",
        parse: String,
        brief: "",
        optional: true,
      },
    },
  },
});
